fileUrl2 <- "http://d396qusza40orc.cloudfront.net/getdata/data/restaurants.xml"
doc <- xmlTreeParse(file=fileUrl2,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
response
names(RootNode)
names(rootNode)
class(doc)
rootNode
rootNames <- xmlName(rootNode)
rootNames
rootNames("response")
rootNames(response)
rootNames[response]
rootNames["response"]
rootNames["response"[1]]
rootNode <- xmlRoot(doc)
print(rootNode)[1:2]
fileUrl2 <- "http://d396qusza40orc.cloudfront.net/getdata/data/restaurants.xml"
doc <- xmlTreeParse(file=fileUrl2,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[1][1]]
rootNode[[1]]
rootNode[[1]][[1]]
attempt <- pathSApply(rootNode,"//zipcode",21231)
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
num <- length(zipcode[zipcode==21231])
length(zipcode[zipcode==21231])
myurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url=myurl,destfile="community_survey.csv",mode="w",method="curl")
list.files("."
)
community <- read.csv("community.csv")
community <- read.csv("community_survey.csv")
DT <- fread("community_survey.csv")
help fread()
fread()
library(data.table)
install.packages("data.table")
library(data.table)
DT <- freat(input="community_survey.csv",sep=",")
DT <- fread(input="community_survey.csv",sep=",")
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
setwd('..')
setwd('Reproducible_Research/')
list.files()
setwd('RepData_PeerAssessment1/')
ist.files()
list.files90
list.files()
actiity <- read.csv("activity.csv")
activity <- read.csv("activity.csv")
library(knitr)
install.packages("knitr")
library(knitr)
activity[1]
activity[1][1]
activity.names
head(activity)
activity <- read.csv("activity.csv", header = TRUE)
head(activity)
step_mean <- mean(activity$steps)
step_mean <- mean(activity$steps,na.rm=TRUE)
?median
unique(activity$date)
length(unique(activity$date))
for (day in unique(activity$date)){}
for (day in unique(activity$date)){print(day)}
mean(activity$steps by(day),na.rm=TRUE)
mean(activity$steps, by(day),na.rm=TRUE)
steps_per_day <- tapply(activity$steps,activity$date,sum,na.rm=TRUE)
list.files("activity.csv")
?list.files()
list.files(".")=="activity.csv"
list.files()=="activity.csv"
sum(list.files()=="activity.csv")
?histogram
??histogram
?hist
?plot.ts
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
plot(activity$steps[na.rm=TRUE],activity$interval,type="l")
head(steps_per_day)
test <- steps_per_day == 126
test
test <- names(steps_per_day == 126)
test
test <- names((steps_per_day == 126)=TRUE
test <- names((steps_per_day == 126)=TRUE)
test <- names((steps_per_day == 126)==TRUE)
test
test <- (steps_per_day == 26)
test
test <- (steps_per_day == 126)
test
test <- (names(steps_per_day, steps_per_day == 126)
)
test <- names(mean_steps_per_day(mean_steps_per_day == 126))
test <- names(mean_steps_per_day(steps_per_day == 126))
test <- names(steps_per_day(steps_per_day == 126))
test <- names(steps_per_day[steps_per_day == 126])
test
return
activity$date = as.Date(activity$date, "%Y-%m-%d")
steps_per_day <- tapply(activity$steps,activity$date,sum,na.rm=TRUE)
mean_steps <- mean(steps_per_day)
median_steps <- median(steps_per_day)
hist(steps_per_day)
mean_steps_per_interval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(mean_steps_per_interval,type="l")
max_int_value <- max(mean_steps_per_interval)
max_int <- names(mean_steps_per_interval[mean_steps_per_interval==max_int_value])
?plot
activity[1]
activity[,1]
activity$steps[1]
activity[1,1]
activity[1,]
activity[2,]
is.na(activity[1,])
sum(is_na(activity[1,]))
sum(is_na(activity[1,])))
sum(is.na(activity[1,]))
test <- tapply(sum(is.na(activity)))
test <- tapply(sum(is.na(activity[,:])))
test <- tapply(sum(is.na(activity[,])))
test <- tapply(sum(is.na(activity[,1:3])))
test <- apply(activity,1,sum(is.na))
test <- apply(activity,1,sum)
apply(activity,1,sum(is.na))
apply(activity,1,tapply(sum(is.na))
)
apply(activity,1,tapply(sum(is.na[activity]))
)
test <- is.na(activity)
View(test)
View(test)
apply(activity,1,sum)
apply(as.numeric(activity),1,sum)
as.numberic(test)
as.numeric(test)
apply(as.numeric(test),1,sum)
as.numeric(test)
test2 <- as.numeric(test)
apply(test2,1,sum)
dim(test2)
dim(activity)
test <- is.na(activity)
dim(test)
test2 <- apply(test,1,sum)
dim(test2)
size(test2)
?size
?dim
length(test2)
length(test2[test2==0])
?index
??index
test <- activity
test.steps[1,]==NA
test.steps[1,]
test$steps[1,]
test$steps[1]
test$steps[1]==NA
test$steps[1]=="NA"
is.na(test$steps[1])==TRUE
head(steps_per_day)
steps_per_day["2012-10-02"]
activity$date[1]
## Loading and preprocessing the data
```{r}
if(sum(list.files()=="activity.csv") == 0){
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
activity <- unz(fileURL,fileName="activity.csv",open="r")
}
activity <- read.csv("activity.csv")
```
```{r}
# convert date?
activity$date = as.Date(activity$date, "%Y-%m-%d")
```
## What is mean total number of steps taken per day?
```{r}
steps_per_day <- tapply(activity$steps,activity$date,sum,na.rm=TRUE)
mean_steps <- mean(steps_per_day)
median_steps <- median(steps_per_day)
hist(steps_per_day)
```
`r mean_steps`
`r median_steps`
## What is the average daily activity pattern?
```{r}
mean_steps_per_interval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(names(mean_steps_per_interval),mean_steps_per_interval,type="l")
max_int_value <- max(mean_steps_per_interval)
max_int <- names(mean_steps_per_interval[mean_steps_per_interval==max_int_value])
```
`r max_int`
## Imputing missing values
```{r}
na_data <- apply(is.na(activity),1,sum)
na_rows <- length(na_data) - length(na_data[na_data==0])
```
`na_rows`
```{r}
newdata <- activity
for(row in 1:length(newdata$steps)){
if(is.na(newdata$steps[row])==TRUE){
newdata$steps[row] <- steps_per_day[newdata$date[row]]
}
}
```
```{r}
new_steps_per_day <- tapply(newdata$steps,newdata$date,sum)
new_mean_steps <- mean(new_steps_per_day)
new_median_steps <- median(new_steps_per_day)
hist(new_steps_per_day)
```
`r new_mean_steps`
`r new_median_steps`
## Are there differences in activity patterns between weekdays and weekends?
View(newdata)
View(newdata)
length(newdata$steps)
is.na(newdata$steps[1])
steps_per_day[newdata#date[1]]
)
newdata$date[1]
steps_per_day[newdata$date[1]]
steps_per_day[2012-10-01
]
if(sum(list.files()=="activity.csv") == 0){
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
activity <- unz(fileURL,fileName="activity.csv",open="r")
}
activity <- read.csv("activity.csv")
```
if(sum(list.files()=="activity.csv") == 0){
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
activity <- unz(fileURL,fileName="activity.csv",open="r")
}
activity <- read.csv("activity.csv")
activity$date = as.Date(activity$date, "%Y-%m-%d")
head(activity)
steps_per_day <- tapply(activity$steps,activity$date,sum,na.rm=TRUE)
mean_steps <- mean(steps_per_day)
median_steps <- median(steps_per_day)
hist(steps_per_day)
head(steps_per_day)
steps_per_day[1:100,]
steps_per_day[,1:50]
steps_per_day[1:50]
length(steps_per_day)
View(activity)
View(newdata)
View(newdata)
as.int
?as.int
??as
?as
head(new_steps_per_day)
head(new_steps_per_day)
new_steps_per_day
?weekdays()
test <- weekdays(new_steps_per_day)
test <- weekdays(new_steps_per_day$date)
head(newdata$date)
test <- weekdays(newdata$date)
head(test)
newdata$day <- weekdays(newdata$date)
View(newdata)
View(newdata)
newdata$day[1]=="Monday"
weekdays <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
"Monday" in weekdays
if(newdata$day in weekdays)
if((newdata$day in weekdays))
if((newdata$day %in% weekdays))
)
newdata$day %in% weekdays
if(newdata$day in weekdays){
newdata$day <- "Weekday"
}
newdata$day in weekdays
?weekday
??%in%
?%in%
%in%
%in%()
?print
?ifelse
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
```{r}
if(sum(list.files()=="activity.csv") == 0){
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
activity <- unz(fileURL,fileName="activity.csv",open="r")
}
activity <- read.csv("activity.csv")
```
```{r}
# convert date?
activity$date = as.Date(activity$date, "%Y-%m-%d")
```
## What is mean total number of steps taken per day?
```{r}
steps_per_day <- tapply(activity$steps,activity$date,sum)
mean_steps <- mean(steps_per_day,na.rm=TRUE)
median_steps <- median(steps_per_day,na.rm=TRUE)
hist(steps_per_day)
```
`r as.integer(mean_steps)`
`r median_steps`
## What is the average daily activity pattern?
```{r}
mean_steps_per_interval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(names(mean_steps_per_interval),mean_steps_per_interval,type="l")
max_int_value <- max(mean_steps_per_interval)
max_int <- names(mean_steps_per_interval[mean_steps_per_interval==max_int_value])
```
`r max_int`
## Imputing missing values
```{r}
na_data <- apply(is.na(activity),1,sum)
na_rows <- length(na_data) - length(na_data[na_data==0])
```
`na_rows`
```{r}
newdata <- activity
for(row in 1:length(newdata$steps)){
if(is.na(newdata$steps[row])){
newdata$steps[row] <- steps_per_day[newdata$date[row]]
}
}
```
```{r}
new_steps_per_day <- tapply(newdata$steps,newdata$date,sum)
for (step in new_steps_per_day){
if(is.na(step)){
step <- mean(new_steps_per_day,rm=TRUE)
}
}
new_mean_steps <- mean(new_steps_per_day,na.rm=TRUE)
new_median_steps <- median(new_steps_per_day,na.rm=TRUE)
hist(new_steps_per_day)
```
`r as.integer(new_mean_steps)`
`r new_median_steps`
## Are there differences in activity patterns between weekdays and weekends?
```{r}
newdata$daytype <- weekdays(newdata$date)
weekdays <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
newdata$daytype <- lapply(newdata$daytype, function(x) ifelse(x %in% weekdays,x<-"Weekday",x<-"Weekend"))
plot(names(mean_steps_per_interval),mean_steps_per_interval,type="l")
mean_interval_steps_weekday <- tapply(newdata$steps,list(newdata$interval,newdata$daytype),mean,na.rm=TRUE)
?list
test <- split(newdata$steps,newdata$daytype)
test <- lapply(newdata$steps,list(newdata$interval,newdata$daytype))
list?
)
?list
test <- lapply(newdata$steps,as.list(newdata$interval,newdata$daytype))
text <- split(newdata$steps,newdata$daytype)
dim(text)
test[1]
newdata$daytype <- weekdays(newdata$date)
weekdays <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
newdata$daytype <- lapply(newdata$daytype, function(x) ifelse(x %in% weekdays,x<-"Weekday",x<-"Weekend"))
View(newdata)
View(newdata)
newdata <- activity
for(row in 1:length(newdata$steps)){
if(is.na(newdata$steps[row])){
newdata$steps[row] <- steps_per_day[newdata$date[row]]
}
}
new_steps_per_day <- tapply(newdata$steps,newdata$date,sum)
for (step in new_steps_per_day){
if(is.na(step)){
step <- mean(new_steps_per_day,rm=TRUE)
}
}
new_mean_steps <- mean(new_steps_per_day,na.rm=TRUE)
new_median_steps <- median(new_steps_per_day,na.rm=TRUE)
hist(new_steps_per_day)
View(newdata)
View(newdata)
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
```{r}
if(sum(list.files()=="activity.csv") == 0){
fileURL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
activity <- unz(fileURL,fileName="activity.csv",open="r")
}
activity <- read.csv("activity.csv")
```
```{r}
# convert date?
activity$date = as.Date(activity$date, "%Y-%m-%d")
```
## What is mean total number of steps taken per day?
```{r}
steps_per_day <- tapply(activity$steps,activity$date,sum)
mean_steps <- mean(steps_per_day,na.rm=TRUE)
median_steps <- median(steps_per_day,na.rm=TRUE)
hist(steps_per_day)
```
`r as.integer(mean_steps)`
`r median_steps`
## What is the average daily activity pattern?
```{r}
mean_steps_per_interval <- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(names(mean_steps_per_interval),mean_steps_per_interval,type="l")
max_int_value <- max(mean_steps_per_interval)
max_int <- names(mean_steps_per_interval[mean_steps_per_interval==max_int_value])
```
`r max_int`
## Imputing missing values
```{r}
na_data <- apply(is.na(activity),1,sum)
na_rows <- length(na_data) - length(na_data[na_data==0])
```
`na_rows`
```{r}
newdata <- activity
#newdata$steps <- lapply(newdata$steps, function(x) ifelse(is.na(x),mean(newdata$date[x.row()]),x))
for(row in 1:length(activity$steps)){
if(is.na(activity$steps[row])){
newdata$steps[row] <- mean(steps_per_day[activity$date[row]])
}
}
```
```{r}
new_steps_per_day <- tapply(newdata$steps,newdata$date,sum)
for (step in new_steps_per_day){
if(is.na(step)){
step <- mean(new_steps_per_day,rm=TRUE)
}
}
new_mean_steps <- mean(new_steps_per_day,na.rm=TRUE)
new_median_steps <- median(new_steps_per_day,na.rm=TRUE)
hist(new_steps_per_day)
```
`r as.integer(new_mean_steps)`
`r new_median_steps`
## Are there differences in activity patterns between weekdays and weekends?
```{r}
newdata$daytype <- weekdays(newdata$date)
weekdays <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
newdata$daytype <- lapply(newdata$daytype, function(x) ifelse(x %in% weekdays,x<-"Weekday",x<-"Weekend"))
```
```{r}
mean_interval_steps_weekday <- tapply(newdata$steps,list(newdata$interval,newdata$daytype),mean,na.rm=TRUE)
print(dim(mean_interval_steps_weekday))
plot(names(mean_interval_steps_weekday),mean_interval_steps_weekday,type="l")
#max_int_value <- max(mean_steps_per_interval)
#max_int <- names(mean_steps_per_interval[mean_steps_per_interval==max_int_value])
```
View(newdata)
View(newdata)
head(steps_per_day)
steps_per_day[2012-10-02]
steps_per_day["2012-10-02"]
steps_per_day["2012-10-02"][1]
class(steps_per_day)
class(steps_per_day["2012-10-02"])
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
head(steps_per_day)
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
class(steps_per_day)
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
steps_per_day <- tapply(activity$steps,activity$date,sum)
class(steps_per_day)
mean_steps <- mean(steps_per_day,na.rm=TRUE)
median_steps <- median(steps_per_day,na.rm=TRUE)
hist(steps_per_day)
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
#mean_steps <- mean(steps_per_day,na.rm=TRUE)
#median_steps <- median(steps_per_day,na.rm=TRUE)
#hist(steps_per_day)
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
print(class(steps_per_day))
#mean_steps <- mean(steps_per_day,na.rm=TRUE)
#median_steps <- median(steps_per_day,na.rm=TRUE)
#hist(steps_per_day)
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
source('~/Google Drive/Online_Courses/Reproducible_Research/RepData_PeerAssessment1/test2.R')
View(steps_per_day)
View(steps_per_day)
View(steps_per_day)
View(steps_per_day)
View(steps_per_day)
?which.max
View(activity)
?which
View(activity)
View(activity)
View(activity)
